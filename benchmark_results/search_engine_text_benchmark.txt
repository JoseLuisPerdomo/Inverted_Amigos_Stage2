# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=55298:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ulpgc.query_engine.GetTextFragmentBenchmark.testGetPartOfBookWithWord
# Parameters: (word_id = 1000)

# Run progress: 0.00% complete, ETA 00:08:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.206 ms/op
# Warmup Iteration   2: 0.211 ms/op
# Warmup Iteration   3: 0.226 ms/op
# Warmup Iteration   4: 0.243 ms/op
# Warmup Iteration   5: 0.393 ms/op
Iteration   1: 0.410 ms/op
Iteration   2: 0.411 ms/op
Iteration   3: 0.390 ms/op
Iteration   4: 0.404 ms/op
Iteration   5: 0.399 ms/op


Result "org.ulpgc.query_engine.GetTextFragmentBenchmark.testGetPartOfBookWithWord":
  0.403 ±(99.9%) 0.034 ms/op [Average]
  (min, avg, max) = (0.390, 0.403, 0.411), stdev = 0.009
  CI (99.9%): [0.369, 0.437] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=55298:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ulpgc.query_engine.GetTextFragmentBenchmark.testGetPartOfBookWithWord
# Parameters: (word_id = 2000)

# Run progress: 20.00% complete, ETA 00:06:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.417 ms/op
# Warmup Iteration   2: 0.716 ms/op
# Warmup Iteration   3: 0.695 ms/op
# Warmup Iteration   4: 0.697 ms/op
# Warmup Iteration   5: 0.701 ms/op
Iteration   1: 0.680 ms/op
Iteration   2: 0.684 ms/op
Iteration   3: 0.681 ms/op
Iteration   4: 0.682 ms/op
Iteration   5: 0.692 ms/op


Result "org.ulpgc.query_engine.GetTextFragmentBenchmark.testGetPartOfBookWithWord":
  0.684 ±(99.9%) 0.020 ms/op [Average]
  (min, avg, max) = (0.680, 0.684, 0.692), stdev = 0.005
  CI (99.9%): [0.664, 0.703] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=55298:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ulpgc.query_engine.GetTextFragmentBenchmark.testGetPartOfBookWithWord
# Parameters: (word_id = 3000)

# Run progress: 40.00% complete, ETA 00:05:04
# Fork: 1 of 1
# Warmup Iteration   1: 0.524 ms/op
# Warmup Iteration   2: 0.573 ms/op
# Warmup Iteration   3: 0.581 ms/op
# Warmup Iteration   4: 0.576 ms/op
# Warmup Iteration   5: 0.577 ms/op
Iteration   1: 0.563 ms/op
Iteration   2: 0.595 ms/op
Iteration   3: 0.487 ms/op
Iteration   4: 0.489 ms/op
Iteration   5: 0.495 ms/op


Result "org.ulpgc.query_engine.GetTextFragmentBenchmark.testGetPartOfBookWithWord":
  0.526 ±(99.9%) 0.192 ms/op [Average]
  (min, avg, max) = (0.487, 0.526, 0.595), stdev = 0.050
  CI (99.9%): [0.334, 0.717] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=55298:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ulpgc.query_engine.GetTextFragmentBenchmark.testGetPartOfBookWithWord
# Parameters: (word_id = 4000)

# Run progress: 60.00% complete, ETA 00:03:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.673 ms/op
# Warmup Iteration   2: 0.666 ms/op
# Warmup Iteration   3: 0.672 ms/op
# Warmup Iteration   4: 0.907 ms/op
# Warmup Iteration   5: 0.984 ms/op
Iteration   1: 1.308 ms/op
Iteration   2: 1.240 ms/op
Iteration   3: 1.367 ms/op
Iteration   4: 1.655 ms/op
Iteration   5: 1.468 ms/op


Result "org.ulpgc.query_engine.GetTextFragmentBenchmark.testGetPartOfBookWithWord":
  1.408 ±(99.9%) 0.622 ms/op [Average]
  (min, avg, max) = (1.240, 1.408, 1.655), stdev = 0.162
  CI (99.9%): [0.786, 2.030] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: C:\Program Files\Java\OpenJDK-21\bin\java.exe
# VM options: -javaagent:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\lib\idea_rt.jar=55298:C:\Users\Radka\AppData\Local\JetBrains\IntelliJ IDEA 2024.2.3\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.ulpgc.query_engine.GetTextFragmentBenchmark.testGetPartOfBookWithWord
# Parameters: (word_id = 5000)

# Run progress: 80.00% complete, ETA 00:01:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.923 ms/op
# Warmup Iteration   2: 1.557 ms/op
# Warmup Iteration   3: 1.555 ms/op
# Warmup Iteration   4: 1.558 ms/op
# Warmup Iteration   5: 1.565 ms/op
Iteration   1: 1.544 ms/op
Iteration   2: 1.545 ms/op
Iteration   3: 1.560 ms/op
Iteration   4: 1.545 ms/op
Iteration   5: 1.559 ms/op


Result "org.ulpgc.query_engine.GetTextFragmentBenchmark.testGetPartOfBookWithWord":
  1.551 ±(99.9%) 0.032 ms/op [Average]
  (min, avg, max) = (1.544, 1.551, 1.560), stdev = 0.008
  CI (99.9%): [1.519, 1.582] (assumes normal distribution)


# Run complete. Total time: 00:08:26

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                           (word_id)  Mode  Cnt  Score   Error  Units
GetTextFragmentBenchmark.testGetPartOfBookWithWord       1000  avgt    5  0.403 ± 0.034  ms/op
GetTextFragmentBenchmark.testGetPartOfBookWithWord       2000  avgt    5  0.684 ± 0.020  ms/op
GetTextFragmentBenchmark.testGetPartOfBookWithWord       3000  avgt    5  0.526 ± 0.192  ms/op
GetTextFragmentBenchmark.testGetPartOfBookWithWord       4000  avgt    5  1.408 ± 0.622  ms/op
GetTextFragmentBenchmark.testGetPartOfBookWithWord       5000  avgt    5  1.551 ± 0.032  ms/op
